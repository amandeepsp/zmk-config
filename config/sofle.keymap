// vim: set ft=c

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/sofle.h"

#define DEFAULT_LAYER 0
#define LOWER_LAYER 1
#define RAISE_LAYER 2

#define KEYS_L LM0 LM1 LM2 LM4

ZMK_HOLD_TAP(hml,
    falvor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <150>;
    require-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L>;
    hold-trigger-on-release;
)

#define kp_A &hml LGUI A
#define kp_S &hml LALT S
#define kp_D &hml LCTRL D
#define kp_F &hml LSHIFT F

// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | PLAY  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

ZMK_LAYER(default_layer,
    &kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                                     &kp N6           &kp N7    &kp N8    &kp N9   &kp N0   &none
    &kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                                      &kp Y            &kp U     &kp I     &kp O    &kp P    &kp BSPC
    &kp TAB   kp_A   kp_S     kp_D     kp_F      &kp G                                      &kp H            &kp J     &kp K     &kp L    &kp SEMI &kp SQT
    &kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B            &kp C_MUTE      &kp C_PP  &kp N            &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                     &kp LGUI &kp LALT &kp LCTRL &mo LOWER_LAYER  &kp RET         &kp SPACE &mo RAISE_LAYER  &kp RCTRL &kp RALT  &kp RGUI
    ,
    &inc_dec_kp C_VOL_UP C_VOL_DOWN &inc_dec_kp PG_DN PG_UP
)

// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |       |
// |       |  -  |  _  |  [   |  {   |  \   |        |  |       |  |   |  }    |  ]    |  =   |   +   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |

ZMK_LAYER(lower_layer,
    &trans &kp F1    &kp F2    &kp F3   &kp F4    &kp F5                      &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
    &trans &kp N1    &kp N2    &kp N3   &kp N4    &kp N5                      &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
    &trans &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT                   &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &trans
    &trans &kp MINUS &kp UNDER &kp LBKT &kp LBRC  &kp BSLH  &trans  &trans    &kp PIPE  &kp RBRC &kp RBKT        &kp EQUAL &kp PLUS  &trans
                     &trans    &trans   &trans    &trans    &trans  &trans    &trans    &trans   &trans          &trans
    ,
    &inc_dec_kp C_VOL_UP C_VOL_DOWN &inc_dec_kp PG_DN PG_UP>
)

// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |

ZMK_LAYER(raise_layer,
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
    &trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
    &trans     &kp LALT     &kpLCTRL     &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
    &trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                            &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
    ,
    &inc_dec_kp C_VOL_UP C_VOL_DOWN &inc_dec_kp PG_DN PG_UP>
)
